name:  Manual Deployment

on:
  workflow_dispatch:

          
          
jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write  
    steps:
      - uses: actions/checkout@v4

      - name: Create pre-release PR
        id: release_pr
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          skip-github-release: true
          skip-github-pull-request: false
      
      - name: Update PR data with dependencies
        if: ${{ steps.release_pr.outputs.prs_created }}
        run: |
          if [ -z ${{ secrets.GITHUB_TOKEN }} ]; then
            echo "token not set"
            exit 1
          fi  
          PR_NUMBER=${{ fromJSON(steps.release_pr.outputs.pr).number }}
          if [ -z "$PR_NUMBER" ]; then
            echo "PR number not found!"
            exit 0
          fi
          PR_DATA=$(curl -s -H "Authorization: Bearer ${{ steps.generate-token.outputs.token }}" https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)
          if [ -z "$PR_DATA" ]; then
            echo "PR data not found!"
            exit 0
          fi
          PR_BODY=$(echo "$PR_DATA" | jq -r .body)
          if [ -z "$PR_BODY" ]; then
            echo "PR body not found!"
            exit 0
          fi
          BRANCH_NAME=$(echo "$PR_DATA" | jq -r .head.ref)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          
          JAVA_LIB_VERSION=$(grep -m1 '<version>' libs/java/pom.xml | sed -e 's/<version>\(.*\)<\/version>/\1/')
          if [ -z "$JAVA_LIB_VERSION" ]; then
            echo "Java lib version not found!"
            exit 0
          fi
          JAVA_LIB_CHANGELOG="\n### ðŸ“– Dependencies:\n* **mobility-business-rev-tooling-embedded-java-lib:$JAVA_LIB_VERSION**\n"
          echo "JAVA_LIB_VERSION=$JAVA_LIB_VERSION" >> $GITHUB_ENV
          echo "JAVA_LIB_CHANGELOG=$JAVA_LIB_CHANGELOG" >> $GITHUB_ENV
          
          PR_BODY_FIRST_LINE=$(echo -e "$PR_BODY" | head -n 6)
          PR_BODY_REST=$(echo -e "$PR_BODY" | tail -n +7)
          NEW_PR_BODY="$PR_BODY_FIRST_LINE$JAVA_LIB_CHANGELOG$PR_BODY_REST"
          echo "$NEW_PR_BODY"
          ESCAPED_PR_BODY=$(echo -e "$NEW_PR_BODY" | jq -Rs .)
          curl -X PATCH -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": $ESCAPED_PR_BODY}" \
                https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER
