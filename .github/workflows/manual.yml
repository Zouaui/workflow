# Generated by the protocol buffer compiler.  DO NOT EDIT!

name: Beta Pre-release

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    create_and_merge_pr_prerelease:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
        steps:

            -   uses: actions/checkout@v4
                with:
                    token: ${{ secrets.PAT_TOKEN }}

            -   name: Create pre-release PR
                id: release_pr
                uses: googleapis/release-please-action@v4
                with:
                    token: ${{ secrets.PAT_TOKEN }}
                    skip-github-release: true
                    skip-github-pull-request: false

            -   name: Check if PR is mergeable
                if: ${{ steps.release_pr.outputs.prs_created == 'true' }}
                env:
                    TOKEN: ${{ secrets.PAT_TOKEN }}
                run: |
                    PR_NUMBER=${{ fromJSON(steps.release_pr.outputs.pr).number }}
                    if [ -z "$PR_NUMBER" ]; then
                      echo "PR number not found!"
                      exit 0
                    fi
                    echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
                    
                    PR_DATA=$(curl -s -H "Authorization: Bearer $TOKEN" https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)
                    if [ -z "$PR_DATA" ]; then
                      echo "PR data not found!"
                      exit 0
                    fi
                    
                    for i in {1..10}
                    do
                      MERGEABLE=$(echo "$PR_DATA" | jq -r .mergeable)
                      if [ "$MERGEABLE" == "true" ]; then
                        echo "PR is mergeable"
                        break
                      fi
                      echo "PR is not mergeable, retrying in 1 second"
                      sleep 1
                    done
                    if [ "$MERGEABLE" != "true" ]; then
                      echo "PR is not mergeable after 10 seconds, failing workflow"
                      exit 1
                    fi

            -   name: Merge Pull Request
                if: ${{ steps.release_pr.outputs.prs_created == 'true' }}
                env:
                    PR_NUMBER: ${{ env.PR_NUMBER }}
                    REPOSITORY: ${{ github.repository }}
                    HEAD_REF: ${{ github.head_ref }}
                    GH_TOKEN: ${{ secrets.PAT_TOKEN }}
                run: |
                    gh pr checkout "$PR_NUMBER"
                    
                    # Step 1: Merge the PR without deleting the branch
                    gh pr merge "$PR_NUMBER" --squash --admin
                    
                    # Step 2: Check if the branch still exists after the merge
                    if gh api "repos/$REPOSITORY/branches/$PR_NUMBER" &>/dev/null; then
                        # Step 3: If the branch exists, delete it
                        gh api -X DELETE "repos/$REPOSITORY/git/refs/heads/$HEAD_REF"
                    else
                        echo "Branch has already been deleted by the repository rule."
                    fi

    create_prerelease_and_tag:
        runs-on: ubuntu-latest
        needs:
            - create_and_merge_pr_prerelease
        steps:


            -   uses: actions/checkout@v4
                with:
                    token: ${{ secrets.PAT_TOKEN }}

            -   name: Create pre-release tag
                id: release
                uses: googleapis/release-please-action@v4
                with:
                    token: ${{ secrets.PAT_TOKEN }}
                    skip-github-release: false
                    skip-github-pull-request: true

            -   name: Tag subsequent major and minor versions
                if: ${{ steps.release.outputs.release_created }}
                env:
                    GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
                run: |
                    git config user.name github-actions[bot]
                    git config user.email github-actions[bot]@users.noreply.github.com
                    git tag -d v${{ steps.release.outputs.major }}-beta || true
                    git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}-beta || true
                    git push origin :v${{ steps.release.outputs.major }}-beta || true
                    git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}-beta || true
                    git tag -a v${{ steps.release.outputs.major }}-beta -m "chore(release): v${{ steps.release.outputs.major }}-beta ðŸŒƒ ðŸš€"
                    git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}-beta -m "chore(release): v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}-beta ðŸŒƒ ðŸš€"
                    git push origin v${{ steps.release.outputs.major }}-beta
                    git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}-beta
